{
  "openapi": "3.0.0",
  "info": {
    "contact": {
      "email": "support@flussonic.com",
      "name": "Support team",
      "url": "https://flussonic.com/"
    },
    "description": "This document is a comprehensive API specification for the Retroview Service of Flussonic.\n\nThe Retroview Service API lets you get analytics data about Flussonic Media Servers including: ingest metrics, transcoder performance, playback sessions, etc.\nTo know more about our API's design principles, visit [Flussonic HTTP API](https://flussonic.com/doc/api/flussonic-http-api/) page.\n\nThis API Reference provides you with all the methods, fields, values, and endpoints currently accessible at .\n\nBefore you proceed, read the following information:\n\n* Some API methods may send extra fields in responses, so your application must be ready to drop them;\n* Do not rely on undocumented fields in the responses as we may modify them at any moment.\n* In further updates of this document, some fields may become deprecated. Such fields will be scheduled for deletion with \n`x-delete-at` property with year and month, after which it will no longer exist.\n",
    "title": "Retroview API",
    "version": "1.0.0"
  },
  "components": {
    "schemas": {
      "collection_response": {
        "type": "object",
        "properties": {
          "estimated_count": {
            "description": "Estimated number of records for the query, without accounting cursors.",
            "type": "integer",
            "nullable": true,
            "example": 5
          },
          "next": {
            "description": "Next cursor - properly encoded analog of offset, allowing to read next bunch of items. \nMore information can be found [here](https://flussonic.com/doc/api/flussonic-http-api/#limited-collections-access-cursors). \nExample: `JTI0cG9zaXRpb25fZ3Q9MA==`  \n",
            "type": "string",
            "nullable": true
          },
          "prev": {
            "description": "Previous cursor - properly encoded analog of offset, allowing to read previous bunch of items. \nMore information can be found [here](https://flussonic.com/doc/api/flussonic-http-api/#limited-collections-access-cursors).\nExample: `JTI0cG9zaXRpb25fbHQ9MSYlMjRyZXZlcnNlZD10cnVl`\n",
            "type": "string",
            "nullable": true
          },
          "timing": {
            "description": "Object with a list of different timings measured during this API call.",
            "type": "object",
            "nullable": true
          },
          "metrics_total": {
            "$ref": "#/components/schemas/metrics_config"
          }
        }
      },
      "sessions_metrics": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "session_id": {
                "type": "string",
                "description": "Session ID.",
                "nullable": true
              },
              "server_hostname": {
                "type": "string",
                "description": "Server ID.",
                "nullable": true
              },
              "server_online": {
                "type": "boolean",
                "description": "True if server is online.",
                "nullable": true
              },
              "stream_name": {
                "type": "string",
                "nullable": true,
                "description": "Stream names .",
                "example": "hockey1"
              },
              "type": {
                "type": "string",
                "description": "Sessions type.",
                "nullable": true,
                "example": "play"
              },
              "proto": {
                "type": "string",
                "description": "Protocol.",
                "nullable": true,
                "example": "hls"
              },
              "dvr": {
                "type": "boolean",
                "description": "flag if dvr.",
                "nullable": true,
                "example": true
              },
              "country": {
                "type": "string",
                "description": "Stream names.",
                "nullable": true,
                "example": "RU"
              },
              "ip": {
                "type": "string",
                "description": "Viewer's IP address .",
                "nullable": true,
                "example": "::ffff:178.66.131.89"
              },
              "user_id": {
                "type": "string",
                "description": "Viewer's useragent.",
                "nullable": true,
                "example": "::ffff:178.66.131.89"
              },
              "useragent": {
                "type": "string",
                "description": "Viewer's useragent.",
                "nullable": true,
                "example": "::ffff:178.66.131.89"
              },
              "referer": {
                "type": "string",
                "format": "url",
                "nullable": true,
                "description": "Referer HTTP header or its analog for other protocols.",
                "example": "http://my-tv-portal.local/hockey1"
              }
            }
          },
          {
            "$ref": "#/components/schemas/metrics_config"
          }
        ]
      },
      "metrics_config": {
        "type": "object",
        "properties": {
          "started_at": {
            "type": "number",
            "format": "utc_ms",
            "nullable": true,
            "description": "The time when the frames transmission started in the session.",
            "example": 1647422469
          },
          "bytes_in": {
            "type": "integer",
            "format": "bytes",
            "x-metric-type": "counter",
            "description": "Incoming traffic (in bytes)",
            "example": 150234
          },
          "bytes_out": {
            "type": "integer",
            "format": "bytes",
            "x-metric-type": "counter",
            "description": "Outgoing traffic (in bytes)",
            "example": 250234
          },
          "duration": {
            "type": "integer",
            "format": "seconds",
            "x-metric-type": "counter",
            "description": "Duration of view time (in seconds)",
            "example": 84567
          },
          "sessions": {
            "type": "integer",
            "x-metric-type": "counter",
            "description": "Number of sessions.",
            "example": 254
          },
          "viewers": {
            "type": "integer",
            "x-metric-type": "counter",
            "description": "Number of viewers.\n",
            "example": 17
          }
        }
      },
      "servers_list": {
        "allOf": [
          {
            "$ref": "#/components/schemas/collection_response"
          },
          {
            "type": "object",
            "properties": {
              "metrics": {
                "items": {
                  "$ref": "#/components/schemas/sessions_metrics"
                },
                "type": "array",
                "description": "List of servers with Retroview metrics according to the query parameters."
              }
            }
          }
        ]
      },
      "streams_list": {
        "allOf": [
          {
            "$ref": "#/components/schemas/collection_response"
          },
          {
            "type": "object",
            "properties": {
              "metrics": {
                "items": {
                  "$ref": "#/components/schemas/sessions_metrics"
                },
                "type": "array",
                "description": "List of streams with Retroview metrics according to the query parameters."
              }
            }
          }
        ]
      },
      "viewers_list": {
        "allOf": [
          {
            "$ref": "#/components/schemas/collection_response"
          },
          {
            "type": "object",
            "properties": {
              "metrics": {
                "items": {
                  "$ref": "#/components/schemas/sessions_metrics"
                },
                "type": "array",
                "description": "List of viewers with Retroview metrics according to the query parameters."
              }
            }
          }
        ]
      },
      "sessions_list": {
        "allOf": [
          {
            "$ref": "#/components/schemas/collection_response"
          },
          {
            "type": "object",
            "properties": {
              "metrics": {
                "items": {
                  "$ref": "#/components/schemas/sessions_metrics"
                },
                "type": "array",
                "description": "List of sessions with Retroview metrics according to the query parameters."
              }
            }
          }
        ]
      }
    },
    "securitySchemes": {
      "basicAuth": {
        "scheme": "basic",
        "type": "http"
      },
      "bearerAuth": {
        "bearerFormat": "JWT",
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "paths": {
    "/servers": {
      "get": {
        "operationId": "servers_list",
        "summary": "Retroview metrics for set of servers",
        "description": "This API method provides metrics for all servers meets filter criteria.\n",
        "parameters": [
          {
            "name": "from",
            "description": "Timestamp metrics will be provided from. (in seconds, UTC). Default is midnight of today.",
            "explode": false,
            "in": "query",
            "required": false,
            "schema": {
              "example": 145678892,
              "type": "integer"
            },
            "style": "form"
          },
          {
            "name": "to",
            "description": "Timestamp metrics will be provided from. (in seconds, UTC)",
            "explode": false,
            "in": "query",
            "required": false,
            "schema": {
              "example": 145678823,
              "type": "integer"
            },
            "style": "form"
          },
          {
            "name": "step",
            "description": "Query resolution step duration (in seconds)",
            "explode": false,
            "in": "query",
            "required": false,
            "schema": {
              "example": 600,
              "type": "integer"
            },
            "style": "form"
          },
          {
            "name": "select",
            "description": "Comma-separated list of metrics that will be returned.",
            "explode": false,
            "in": "query",
            "required": false,
            "schema": {
              "example": "bytes_in, duration, viewers, sessions, uniq_sessions",
              "type": "string"
            },
            "style": "form"
          },
          {
            "name": "sort",
            "description": "Composite sort direction.\nDefault sort order is `named_by (config,user,remote)`, `position`, `name`.\n",
            "explode": false,
            "in": "query",
            "required": false,
            "schema": {
              "example": "-stats.bitrate,name,position",
              "type": "string"
            },
            "style": "form"
          },
          {
            "name": "limit",
            "description": "Limit select count in collection to N elements.  Default value is 100.",
            "explode": false,
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 100
            },
            "style": "form"
          },
          {
            "name": "cursor",
            "description": "Properly encoded analog of offset, allowing to read next bunch of items. \nWe do not offer common `offset` fields, use please cursor for predictable\nfetching of quickly changing list of items. More information can be found [here](https://flussonic.com/doc/api/flussonic-http-api/#limited-collections-access-cursors)\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "JTI0cG9zaXRpb25fZ3Q9MQ=="
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/servers_list"
                }
              }
            },
            "description": "Response"
          }
        },
        "tags": [
          "Servers"
        ]
      }
    },
    "/streams": {
      "get": {
        "operationId": "streams_list",
        "summary": "Retroview metrics for set of streams",
        "description": "This API method provides metrics for all streams meets filter criteria.\n",
        "parameters": [
          {
            "name": "from",
            "description": "Timestamp metrics will be provided from. (in seconds, UTC). Default is midnight of today.",
            "explode": false,
            "in": "query",
            "required": false,
            "schema": {
              "example": 145678892,
              "type": "integer"
            },
            "style": "form"
          },
          {
            "name": "to",
            "description": "Timestamp metrics will be provided from. (in seconds, UTC)",
            "explode": false,
            "in": "query",
            "required": false,
            "schema": {
              "example": 145678823,
              "type": "integer"
            },
            "style": "form"
          },
          {
            "name": "step",
            "description": "Query resolution step duration (in seconds)",
            "explode": false,
            "in": "query",
            "required": false,
            "schema": {
              "example": 600,
              "type": "integer"
            },
            "style": "form"
          },
          {
            "name": "select",
            "description": "Comma-separated list of metrics that will be returned.",
            "explode": false,
            "in": "query",
            "required": false,
            "schema": {
              "example": "bytes_in, duration, viewers, sessions, uniq_sessions",
              "type": "string"
            },
            "style": "form"
          },
          {
            "name": "sort",
            "description": "Composite sort direction.\nDefault sort order is `named_by (config,user,remote)`, `position`, `name`.\n",
            "explode": false,
            "in": "query",
            "required": false,
            "schema": {
              "example": "-stats.bitrate,name,position",
              "type": "string"
            },
            "style": "form"
          },
          {
            "name": "limit",
            "description": "Limit select count in collection to N elements.  Default value is 100.",
            "explode": false,
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 100
            },
            "style": "form"
          },
          {
            "name": "cursor",
            "description": "Properly encoded analog of offset, allowing to read next bunch of items. \nWe do not offer common `offset` fields, use please cursor for predictable\nfetching of quickly changing list of items. More information can be found [here](https://flussonic.com/doc/api/flussonic-http-api/#limited-collections-access-cursors)\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "JTI0cG9zaXRpb25fZ3Q9MQ=="
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/streams_list"
                }
              }
            },
            "description": "Response"
          }
        },
        "tags": [
          "Streams"
        ]
      }
    },
    "/viewers": {
      "get": {
        "operationId": "viewers_list",
        "summary": "Retroview metrics for set of viewers",
        "description": "This API method provides metrics for all viewers meets filter criteria.\n",
        "parameters": [
          {
            "name": "from",
            "description": "Timestamp metrics will be provided from. (in seconds, UTC). Default is midnight of today.",
            "explode": false,
            "in": "query",
            "required": false,
            "schema": {
              "example": 145678892,
              "type": "integer"
            },
            "style": "form"
          },
          {
            "name": "to",
            "description": "Timestamp metrics will be provided from. (in seconds, UTC)",
            "explode": false,
            "in": "query",
            "required": false,
            "schema": {
              "example": 145678823,
              "type": "integer"
            },
            "style": "form"
          },
          {
            "name": "step",
            "description": "Query resolution step duration (in seconds)",
            "explode": false,
            "in": "query",
            "required": false,
            "schema": {
              "example": 600,
              "type": "integer"
            },
            "style": "form"
          },
          {
            "name": "select",
            "description": "Comma-separated list of metrics that will be returned.",
            "explode": false,
            "in": "query",
            "required": false,
            "schema": {
              "example": "bytes_in, duration, viewers, sessions, uniq_sessions",
              "type": "string"
            },
            "style": "form"
          },
          {
            "name": "sort",
            "description": "Composite sort direction.\nDefault sort order is `named_by (config,user,remote)`, `position`, `name`.\n",
            "explode": false,
            "in": "query",
            "required": false,
            "schema": {
              "example": "-stats.bitrate,name,position",
              "type": "string"
            },
            "style": "form"
          },
          {
            "name": "limit",
            "description": "Limit select count in collection to N elements.  Default value is 100.",
            "explode": false,
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 100
            },
            "style": "form"
          },
          {
            "name": "cursor",
            "description": "Properly encoded analog of offset, allowing to read next bunch of items. \nWe do not offer common `offset` fields, use please cursor for predictable\nfetching of quickly changing list of items. More information can be found [here](https://flussonic.com/doc/api/flussonic-http-api/#limited-collections-access-cursors)\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "JTI0cG9zaXRpb25fZ3Q9MQ=="
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/viewers_list"
                }
              }
            },
            "description": "Response"
          }
        },
        "tags": [
          "Viewers"
        ]
      }
    },
    "/user_sessions": {
      "get": {
        "operationId": "user_sessions_list",
        "summary": "Retroview metrics for set of user sessions",
        "description": "This API method provides metrics for all user sessions meets filter criteria.\n",
        "parameters": [
          {
            "name": "from",
            "description": "Timestamp metrics will be provided from. (in seconds, UTC). Default is midnight of today.",
            "explode": false,
            "in": "query",
            "required": false,
            "schema": {
              "example": 145678892,
              "type": "integer"
            },
            "style": "form"
          },
          {
            "name": "to",
            "description": "Timestamp metrics will be provided from. (in seconds, UTC)",
            "explode": false,
            "in": "query",
            "required": false,
            "schema": {
              "example": 145678823,
              "type": "integer"
            },
            "style": "form"
          },
          {
            "name": "step",
            "description": "Query resolution step duration (in seconds)",
            "explode": false,
            "in": "query",
            "required": false,
            "schema": {
              "example": 600,
              "type": "integer"
            },
            "style": "form"
          },
          {
            "name": "select",
            "description": "Comma-separated list of metrics that will be returned.",
            "explode": false,
            "in": "query",
            "required": false,
            "schema": {
              "example": "bytes_in, duration, viewers, sessions, uniq_sessions",
              "type": "string"
            },
            "style": "form"
          },
          {
            "name": "sort",
            "description": "Composite sort direction.\nDefault sort order is `named_by (config,user,remote)`, `position`, `name`.\n",
            "explode": false,
            "in": "query",
            "required": false,
            "schema": {
              "example": "-stats.bitrate,name,position",
              "type": "string"
            },
            "style": "form"
          },
          {
            "name": "limit",
            "description": "Limit select count in collection to N elements.  Default value is 100.",
            "explode": false,
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 100
            },
            "style": "form"
          },
          {
            "name": "cursor",
            "description": "Properly encoded analog of offset, allowing to read next bunch of items. \nWe do not offer common `offset` fields, use please cursor for predictable\nfetching of quickly changing list of items. More information can be found [here](https://flussonic.com/doc/api/flussonic-http-api/#limited-collections-access-cursors)\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "JTI0cG9zaXRpb25fZ3Q9MQ=="
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sessions_list"
                }
              }
            },
            "description": "Response"
          }
        },
        "tags": [
          "Sessions"
        ]
      }
    },
    "/session": {
      "get": {
        "operationId": "sessions_list",
        "summary": "Retroview metrics for set of sessions",
        "description": "This API method provides metrics for all sessions meets filter criteria.\n",
        "parameters": [
          {
            "name": "from",
            "description": "Timestamp metrics will be provided from. (in seconds, UTC). Default is midnight of today.",
            "explode": false,
            "in": "query",
            "required": false,
            "schema": {
              "example": 145678892,
              "type": "integer"
            },
            "style": "form"
          },
          {
            "name": "to",
            "description": "Timestamp metrics will be provided from. (in seconds, UTC)",
            "explode": false,
            "in": "query",
            "required": false,
            "schema": {
              "example": 145678823,
              "type": "integer"
            },
            "style": "form"
          },
          {
            "name": "step",
            "description": "Query resolution step duration (in seconds)",
            "explode": false,
            "in": "query",
            "required": false,
            "schema": {
              "example": 600,
              "type": "integer"
            },
            "style": "form"
          },
          {
            "name": "select",
            "description": "Comma-separated list of metrics that will be returned.",
            "explode": false,
            "in": "query",
            "required": false,
            "schema": {
              "example": "bytes_in, duration, viewers, sessions, uniq_sessions",
              "type": "string"
            },
            "style": "form"
          },
          {
            "name": "sort",
            "description": "Composite sort direction.\nDefault sort order is `named_by (config,user,remote)`, `position`, `name`.\n",
            "explode": false,
            "in": "query",
            "required": false,
            "schema": {
              "example": "-stats.bitrate,name,position",
              "type": "string"
            },
            "style": "form"
          },
          {
            "name": "limit",
            "description": "Limit select count in collection to N elements.  Default value is 100.",
            "explode": false,
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 100
            },
            "style": "form"
          },
          {
            "name": "cursor",
            "description": "Properly encoded analog of offset, allowing to read next bunch of items. \nWe do not offer common `offset` fields, use please cursor for predictable\nfetching of quickly changing list of items. More information can be found [here](https://flussonic.com/doc/api/flussonic-http-api/#limited-collections-access-cursors)\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "JTI0cG9zaXRpb25fZ3Q9MQ=="
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sessions_list"
                }
              }
            },
            "description": "Response"
          }
        },
        "tags": [
          "Sessions"
        ]
      }
    }
  },
  "security": [
    {
      "basicAuth": []
    },
    {
      "bearerAuth": []
    }
  ],
  "servers": [
    {
      "description": "Retroview Service API endpoint",
      "url": "https://flussonic.cloud/rv/api/v3"
    }
  ],
  "tags": [
    {
      "name": "Servers",
      "description": "Servers metrics in Retroview."
    },
    {
      "name": "Streams",
      "description": "Streams metrics in Retroview."
    },
    {
      "name": "Viewers",
      "description": "Viewers metrics in Retroview."
    },
    {
      "name": "Sessions",
      "description": "Sessions metrics in Retroview."
    }
  ]
}